enclave
{
	include "sgx_key_exchange.h"
	include "sgx_trts.h"
	
	from "sgx_ra_client.edl" import *;
	from "sgx_ra_sp.edl" import *;
	from "decent_tools.edl" import *;
	from "decent_net.edl" import *;
	from "decent_ra_app.edl" import *;
	from "decent_file_system.edl" import *;

	trusted 
	{
		public int  ecall_decent_dht_init(uint64_t self_addr, int is_first_node, uint64_t ex_addr);
		public void ecall_decent_dht_deinit();
		public int  ecall_decent_dht_proc_msg_from_dht([user_check] void* connection) transition_using_threads;
		public int  ecall_decent_dht_proc_msg_from_store([user_check] void* connection) transition_using_threads;
		public int  ecall_decent_dht_proc_msg_from_app([user_check] void* connection) transition_using_threads;
	};
	
	untrusted
	{
		void ocall_decent_dht_cnt_mgr_get_dht([out] void** out_cnt_ptr, uint64_t address) transition_using_threads;
		void ocall_decent_dht_cnt_mgr_get_store([out] void** out_cnt_ptr, uint64_t address) transition_using_threads;
	};
};
